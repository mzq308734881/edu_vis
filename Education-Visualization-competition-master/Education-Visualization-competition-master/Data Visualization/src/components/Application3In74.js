import React from 'react';
import { Card } from 'react-bootstrap';
import Ec from './Ec'
import Intro from './Intro';

export default function() {
    let index = 0;
    let name = ['已选择物理', '已选择化学', '已选择政治', '已选择历史', '已选择生物', '已选择地理', '已选择技术'];
    let xydata = [['化学', '政治', '历史', '生物', '地理', '技术'], ['物理', '政治', '历史', '生物', '地理', '技术'], ['物理', '化学', '历史', '生物', '地理', '技术'], ['物理', '化学', '政治', '生物', '地理', '技术'], ['物理', '化学', '政治', '历史', '地理', '技术'], ['物理', '化学', '政治', '历史', '生物', '技术'], ['物理', '化学', '政治', '历史', '生物', '地理']];
    let data_total = [[[0, 1, 8.29], [0, 2, 7.23], [0, 3, 9.18], [0, 4, 7.29], [0, 5, 4.67], [1, 0, 8.29], [1, 2, 7.19], [1, 3, 9.14], [1, 4, 7.25], [1, 5, 4.63], [2, 0, 7.23], [2, 1, 7.19], [2, 3, 8.08], [2, 4, 6.19], [2, 5, 3.57], [3, 0, 9.18], [3, 1, 9.14], [3, 2, 8.08], [3, 4, 8.14], [3, 5, 5.51], [4, 0, 7.29], [4, 1, 7.25], [4, 2, 6.19], [4, 3, 8.14], [4, 5, 3.63], [5, 0, 4.67], [5, 1, 4.63], [5, 2, 3.57], [5, 3, 5.51], [5, 4, 3.63]], [[0, 1, 8.34], [0, 2, 7.28], [0, 3, 9.22], [0, 4, 7.34], [0, 5, 4.73], [1, 0, 8.34], [1, 2, 7.16], [1, 3, 9.1], [1, 4, 7.22], [1, 5, 4.61], [2, 0, 7.28], [2, 1, 7.16], [2, 3, 8.05], [2, 4, 6.17], [2, 5, 3.55], [3, 0, 9.22], [3, 1, 9.1], [3, 2, 8.05], [3, 4, 8.11], [3, 5, 5.49], [4, 0, 7.34], [4, 1, 7.22], [4, 2, 6.17], [4, 3, 8.11], [4, 5, 3.61], [5, 0, 4.73], [5, 1, 4.61], [5, 2, 3.55], [5, 3, 5.49], [5, 4, 3.61]], [[0, 1, 8.36], [0, 2, 7.27], [0, 3, 9.21], [0, 4, 7.33], [0, 5, 4.72], [1, 0, 8.36], [1, 2, 7.19], [1, 3, 9.13], [1, 4, 7.25], [1, 5, 4.64], [2, 0, 7.27], [2, 1, 7.19], [2, 3, 8.03], [2, 4, 6.16], [2, 5, 3.54], [3, 0, 9.21], [3, 1, 9.13], [3, 2, 8.03], [3, 4, 8.09], [3, 5, 5.48], [4, 0, 7.33], [4, 1, 7.25], [4, 2, 6.16], [4, 3, 8.09], [4, 5, 3.6], [5, 0, 4.72], [5, 1, 4.64], [5, 2, 3.54], [5, 3, 5.48], [5, 4, 3.6]], [[0, 1, 7.95], [0, 2, 7.91], [0, 3, 8.75], [0, 4, 6.96], [0, 5, 4.48], [1, 0, 7.95], [1, 2, 7.83], [1, 3, 8.67], [1, 4, 6.89], [1, 5, 4.41], [2, 0, 7.91], [2, 1, 7.83], [2, 3, 8.63], [2, 4, 6.85], [2, 5, 4.37], [3, 0, 8.75], [3, 1, 8.67], [3, 2, 8.63], [3, 4, 7.69], [3, 5, 5.21], [4, 0, 6.96], [4, 1, 6.89], [4, 2, 6.85], [4, 3, 7.69], [4, 5, 3.42], [5, 0, 4.48], [5, 1, 4.41], [5, 2, 4.37], [5, 3, 5.21], [5, 4, 3.42]], [[0, 1, 8.75], [0, 2, 8.71], [0, 3, 7.61], [0, 4, 7.67], [0, 5, 4.94], [1, 0, 8.75], [1, 2, 8.62], [1, 3, 7.52], [1, 4, 7.58], [1, 5, 4.85], [2, 0, 8.71], [2, 1, 8.62], [2, 3, 7.48], [2, 4, 7.54], [2, 5, 4.81], [3, 0, 7.61], [3, 1, 7.52], [3, 2, 7.48], [3, 4, 6.44], [3, 5, 3.71], [4, 0, 7.67], [4, 1, 7.58], [4, 2, 7.54], [4, 3, 6.44], [4, 5, 3.77], [5, 0, 4.94], [5, 1, 4.85], [5, 2, 4.81], [5, 3, 3.71], [5, 4, 3.77]], [[0, 1, 7.97], [0, 2, 7.93], [0, 3, 6.93], [0, 4, 8.77], [0, 5, 4.5], [1, 0, 7.97], [1, 2, 7.85], [1, 3, 6.85], [1, 4, 8.69], [1, 5, 4.42], [2, 0, 7.93], [2, 1, 7.85], [2, 3, 6.81], [2, 4, 8.66], [2, 5, 4.38], [3, 0, 6.93], [3, 1, 6.85], [3, 2, 6.81], [3, 4, 7.65], [3, 5, 3.38], [4, 0, 8.77], [4, 1, 8.69], [4, 2, 8.66], [4, 3, 7.65], [4, 5, 5.22], [5, 0, 4.5], [5, 1, 4.42], [5, 2, 4.38], [5, 3, 3.38], [5, 4, 5.22]], [[0, 1, 7.09], [0, 2, 7.05], [0, 3, 6.16], [0, 4, 7.8], [0, 5, 6.21], [1, 0, 7.09], [1, 2, 6.98], [1, 3, 6.09], [1, 4, 7.73], [1, 5, 6.14], [2, 0, 7.05], [2, 1, 6.98], [2, 3, 6.06], [2, 4, 7.7], [2, 5, 6.11], [3, 0, 6.16], [3, 1, 6.09], [3, 2, 6.06], [3, 4, 6.8], [3, 5, 5.22], [4, 0, 7.8], [4, 1, 7.73], [4, 2, 7.7], [4, 3, 6.8], [4, 5, 6.86], [5, 0, 6.21], [5, 1, 6.14], [5, 2, 6.11], [5, 3, 5.22], [5, 4, 6.86]]];
    function generateGrid(option){
        for (let i = 0; i < 7; i ++){
            option.title.push({
                textAlign: 'center',
                text: name[index],
                left: 2 + i * (12 + 2.1) + 5.5 + '%',
                textStyle: {
                    fontSize: 13,
                }
            });
            option.grid.push({
                left: 2.4 + i * (12 + 2.1) + '%',
                top: '12%',
                width: '12%',
                height: '75%'
            });
            option.xAxis.push({
                gridIndex: index,
                type: 'category',
                data: xydata[index],
                axisTick: {
                    show: false
                },
                axisLabel: {
                    margin: 1,
                    formatter: param => param[0] + '\n' + param[1]
                },
                splitArea: {
                    show: false
                }
            });
            option.yAxis.push({
                gridIndex: index,
                type: 'category',
                data: xydata[index],
                axisTick: {
                    show: false
                },
                axisLabel: {
                    margin: 1
                },
                splitArea: {
                    show: false
                }
            });
            option.series.push({
                type: 'heatmap',
                xAxisIndex: index,
                yAxisIndex: index,
                data: data_total[index],
                label: {
                    normal: {
                        show: true,
                        color: '#373c38',
                        fontSize: 10,
                    }
                },
                itemStyle: {
                    emphasis:{
                        borderColor: '#fcfaf2',
                    }
                }
            });

            index ++;
        }
    }
    const option = {
        title: [],
        tooltip: {
            formatter: function (params) {
                return [
                    '选择' + xydata[params.seriesIndex][(params.data[0])] + '和' + xydata[params.seriesIndex][(params.data[1])],
                    '组合百分比为' + params.data[2] + '%'
                ].join('<br/>')
            }
        },
        animation: true,
        visualMap: {
            show: false,
            min: 3,
            max: 9,
            inRange: {
                color: '#df6b66',
                opacity: [0.3, 1]
            }
        },
        grid: [],
        xAxis: [],
        yAxis: [],
        series: []
    } 
    generateGrid(option);
    return (
        <Card>
            <Card.Header>
                <h4>4-3-3 双学科组合热力图</h4>
                <Intro content={[
                    '设计理念: 考虑到会存在学生有一门喜欢的学科，另外两个学科不太明确，因此可通过热力图来了解另外两种学科的不同组合比例'
                ]} />
            </Card.Header>
            <Card.Body>
                <Ec option={option} h='300px'/>
            </Card.Body>
        </Card>
    )
}